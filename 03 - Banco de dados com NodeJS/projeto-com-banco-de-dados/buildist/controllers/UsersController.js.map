{"version":3,"sources":["../../controllers/UsersController.js"],"names":["moment","require","jwt","User","Task","sequelize","ctrl","module","exports","createUser","request","response","next","body","name","username","password","birthday","create","toDate","then","user","status","json","catch","error","console","returnUserById","userId","params","findById","include","model","required","send","updateUser","update","where","id","recordsCount","deleteUser","transaction","destroy","user_id","testandoLog","rollback","text","log","login","loggedUser","accessType","token","createToken","verifyAuth","headers","cookies","payload","decodeToken","ex","returnUser","findAll","attributes","exclude","users","countUsers","fn","col"],"mappings":";;AACA;;;;;;;;AADA,IAAMA,SAASC,QAAQ,QAAR,CAAf;;;AAGA,IAAMC,MAAMD,QAAQ,cAAR,CAAZ;;eACkCA,QAAQ,WAAR,C;IAA1BE,I,YAAAA,I;IAAMC,I,YAAAA,I;IAAMC,S,YAAAA,S;;AAEpB,IAAMC,OAAOC,OAAOC,OAApB;;AAEA;;;;;AAKAF,KAAKG,UAAL,GAAkB,UAAUC,OAAV,EAAmBC,QAAnB,EAA6BC,IAA7B,EAAmC;AAAA,wBACFF,QAAQG,IADN;AAAA,QACzCC,IADyC,iBACzCA,IADyC;AAAA,QACnCC,QADmC,iBACnCA,QADmC;AAAA,QACzBC,QADyB,iBACzBA,QADyB;AAAA,QACfC,QADe,iBACfA,QADe;;AAEjDd,SAAKe,MAAL,CAAY;AACRJ,kBADQ;AAERC,0BAFQ;AAGRC,0BAHQ;AAIRC,kBAAUjB,OAAOiB,QAAP,EAAiB,YAAjB,EAA+B,IAA/B,EAAqCE,MAArC;AAJF,KAAZ,EAKGC,IALH,CAKQ,UAAUC,IAAV,EAAgB;AACpBV,iBAASW,MAAT,CAAgB,GAAhB,EAAqBC,IAArB,CAA0BF,IAA1B;AACH,KAPD,EAOGG,KAPH,CAOS,UAAUC,KAAV,EAAiB;AACtBC,gBAAQD,KAAR,CAAcA,KAAd;AACAb,aAAKa,KAAL;AACH,KAVD;AAWH,CAbD;;AAeAnB,KAAKqB,cAAL,GAAsB,UAAUjB,OAAV,EAAmBC,QAAnB,EAA6BC,IAA7B,EAAmC;AAAA,QAC7CgB,MAD6C,GAClClB,QAAQmB,MAD0B,CAC7CD,MAD6C;;AAErDzB,SAAK2B,QAAL,CAAcF,MAAd,EAAsB;AAClBG,iBAAS,CAAC;AACNC,mBAAO5B,IADD;AAEN6B,sBAAU;AAFJ,SAAD;AADS,KAAtB,EAKGb,IALH,CAKQ,UAAUC,IAAV,EAAgB;AACpB,YAAIA,IAAJ,EAAU;AACNV,qBAASW,MAAT,CAAgB,GAAhB,EAAqBC,IAArB,CAA0BF,IAA1B;AACH,SAFD,MAEO;AACHV,qBAASW,MAAT,CAAgB,GAAhB,EAAqBY,IAArB,CAA0B,yBAA1B;AACH;AACJ,KAXD,EAWGV,KAXH,CAWS,UAAUC,KAAV,EAAiB;AACtBC,gBAAQD,KAAR,CAAcA,KAAd;AACAb,aAAKa,KAAL;AACH,KAdD;AAeH,CAjBD;;AAmBAnB,KAAK6B,UAAL,GAAkB,UAAUzB,OAAV,EAAmBC,QAAnB,EAA6BC,IAA7B,EAAmC;AAAA,QACzCgB,MADyC,GAC9BlB,QAAQmB,MADsB,CACzCD,MADyC;AAAA,yBAEZlB,QAAQG,IAFI;AAAA,QAEzCC,IAFyC,kBAEzCA,IAFyC;AAAA,QAEnCE,QAFmC,kBAEnCA,QAFmC;AAAA,QAEzBC,QAFyB,kBAEzBA,QAFyB;;AAGjDd,SAAKiC,MAAL,CAAY;AACRtB,kBADQ;AAERE,0BAFQ;AAGRC,kBAAUjB,OAAOiB,QAAP,EAAiB,YAAjB,EAA+B,IAA/B,EAAqCE,MAArC;AAHF,KAAZ,EAIG;AACKkB,eAAO;AACHC,gBAAIV;AADD;AADZ,KAJH,EASER,IATF,CASO,UAAUmB,YAAV,EAAwB;AAC3B,YAAIA,aAAa,CAAb,IAAkB,CAAtB,EAAyB;AACrB5B,qBAASW,MAAT,CAAgB,GAAhB,EAAqBY,IAArB;AACH,SAFD,MAEO;AACHvB,qBAASW,MAAT,CAAgB,GAAhB,EAAqBY,IAArB,CAA0B,wBAA1B;AACH;AACJ,KAfD,EAeGV,KAfH,CAeS,UAAUC,KAAV,EAAiB;AACtBC,gBAAQD,KAAR,CAAcA,KAAd;AACAb,aAAKa,KAAL;AACH,KAlBD;AAmBH,CAtBD;;AAwBAnB,KAAKkC,UAAL,GAAkB,UAAU9B,OAAV,EAAmBC,QAAnB,EAA6BC,IAA7B,EAAmC;AAAA,QACzCgB,MADyC,GAC9BlB,QAAQmB,MADsB,CACzCD,MADyC;;;AAGjDvB,cAAUoC,WAAV;AAAA,2EAAsB,iBAAgBA,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCACZrC,KAAKsC,OAAL,CAAa;AACfL,uCAAO;AACHM,6CAASf;AADN,iCADQ;AAIfa;AAJe,6BAAb,CADY;;AAAA;AAAA;AAAA,mCAQStC,KAAKuC,OAAL,CAAa;AACpCL,uCAAO;AACHC,wCAAIV;AADD,iCAD6B;AAIpCa;AAJoC,6BAAb,CART;;AAAA;AAQZF,wCARY;;;AAelBK,wCAAYL,YAAZ;;AAfkB,kCAiBdA,eAAe,CAjBD;AAAA;AAAA;AAAA;;AAkBd5B,qCAASW,MAAT,CAAgB,GAAhB,EAAqBY,IAArB;AAlBc;AAAA;;AAAA;AAoBdvB,qCAASW,MAAT,CAAgB,GAAhB,EAAqBY,IAArB,CAA0B,wBAA1B;AApBc,6DAqBPO,YAAYI,QAAZ,EArBO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAtB;;AAAA;AAAA;AAAA;AAAA,SAwBGrB,KAxBH,CAwBS,UAAUC,KAAV,EAAiB;AACtBC,gBAAQD,KAAR,CAAcA,KAAd;AACAb,aAAKa,KAAL;AACH,KA3BD;AA4BH,CA/BD;;AAiCA,SAASmB,WAAT,CAAqBE,IAArB,EAA2B;AACvBpB,YAAQqB,GAAR,CAAYD,IAAZ;AACH;;AAEDxC,KAAK0C,KAAL,GAAa,UAAUtC,OAAV,EAAmBC,QAAnB,EAA6B;AAAA,yBACPD,QAAQG,IADD;AAAA,QAC9BE,QAD8B,kBAC9BA,QAD8B;AAAA,QACpBC,QADoB,kBACpBA,QADoB;;;AAGtC,QAAID,aAAa,OAAb,IAAwBC,aAAa,QAAzC,EAAmD;AAC/C,YAAMiC,aAAa;AACfnC,kBAAM,SADS;AAEfC,sBAAU,OAFK;AAGfmC,wBAAY;AAHG,SAAnB;AAKA,YAAMC,QAAQjD,IAAIkD,WAAJ,CAAgBH,UAAhB,CAAd;AACAtC,iBAASW,MAAT,CAAgB,GAAhB,EAAqBC,IAArB,CAA0B;AACtB4B,mBAAOA;AADe,SAA1B;AAGH,KAVD,MAUO;AACHxC,iBAASW,MAAT,CAAgB,GAAhB,EAAqBY,IAArB,CAA0B,6BAA1B;AACH;AACJ,CAhBD;;AAkBA5B,KAAK+C,UAAL,GAAkB,UAAU3C,OAAV,EAAmBC,QAAnB,EAA6BC,IAA7B,EAAmC;AACjD,QAAMuC,QAAQzC,QAAQ4C,OAAR,CAAgB,gBAAhB,KACV5C,QAAQ6C,OAAR,CAAgB,gBAAhB,CADJ;AAEA,QAAI;AACA,YAAMC,UAAUtD,IAAIuD,WAAJ,CAAgBN,KAAhB,CAAhB;AACA,YAAIK,OAAJ,EAAa;AACT9C,oBAAQ8C,OAAR,GAAkBA,OAAlB;AACA5C;AACA;AACH;AACJ,KAPD,CAOE,OAAO8C,EAAP,EAAW;AACThC,gBAAQD,KAAR,CAAciC,EAAd;AACH;AACD/C,aAASW,MAAT,CAAgB,GAAhB,EAAqBY,IAArB,CAA0B,mBAA1B;AACH,CAdD;;AAgBA5B,KAAKqD,UAAL,GAAkB,UAAUjD,OAAV,EAAmBC,QAAnB,EAA6BC,IAA7B,EAAmC;AACjDT,SAAKyD,OAAL,CAAa;AACTC,oBAAY;AACRC,qBAAS,CAAC,UAAD;AADD;AADH,KAAb,EAIG1C,IAJH,CAIQ,UAAU2C,KAAV,EAAiB;AACrBpD,iBAASW,MAAT,CAAgB,GAAhB,EAAqBC,IAArB,CAA0BwC,KAA1B;AACH,KAND,EAMGvC,KANH,CAMS,UAAUC,KAAV,EAAiB;AACtBC,gBAAQD,KAAR,CAAcA,KAAd;AACAb,aAAKa,KAAL;AACH,KATD;AAUH,CAXD;;AAaAnB,KAAK0D,UAAL,GAAkB,UAAUtD,OAAV,EAAmBC,QAAnB,EAA6BC,IAA7B,EAAmC;AACjDT,SAAKyD,OAAL,CAAa;AACTC,oBAAY,CAAC,CAACxD,UAAU4D,EAAV,CAAa,OAAb,EAAsB5D,UAAU6D,GAAV,CAAc,IAAd,CAAtB,CAAD,EAA6C,aAA7C,CAAD;AADH,KAAb,EAEG9C,IAFH,CAEQ,UAAU4C,UAAV,EAAsB;AAC1BrD,iBAASW,MAAT,CAAgB,GAAhB,EAAqBC,IAArB,CAA0ByC,WAAW,CAAX,CAA1B;AACH,KAJD,EAIGxC,KAJH,CAIS,UAAUC,KAAV,EAAiB;AACtBC,gBAAQD,KAAR,CAAcA,KAAd;AACAb,aAAKa,KAAL;AACH,KAPD;AAQH,CATD","file":"UsersController.js","sourcesContent":["const moment = require('moment');\r\nimport express, { Request, Response } from 'express';\r\n\r\nconst jwt = require('../utils/jwt');\r\nconst { User, Task, sequelize } = require('../models');\r\n\r\nconst ctrl = module.exports;\r\n\r\n/**\r\n * @param {Request} request \r\n * @param {Response} response \r\n * @param {function} next \r\n */\r\nctrl.createUser = function (request, response, next) {\r\n    const { name, username, password, birthday } = request.body;\r\n    User.create({\r\n        name,\r\n        username,\r\n        password,\r\n        birthday: moment(birthday, 'YYYY-MM-DD', true).toDate()\r\n    }).then(function (user) {\r\n        response.status(201).json(user);\r\n    }).catch(function (error) {\r\n        console.error(error);\r\n        next(error);\r\n    })\r\n};\r\n\r\nctrl.returnUserById = function (request, response, next) {\r\n    const { userId } = request.params;\r\n    User.findById(userId, {\r\n        include: [{\r\n            model: Task,\r\n            required: false,\r\n        }]\r\n    }).then(function (user) {\r\n        if (user) {\r\n            response.status(200).json(user);\r\n        } else {\r\n            response.status(404).send('Usuário não encontrado.');\r\n        }\r\n    }).catch(function (error) {\r\n        console.error(error);\r\n        next(error);\r\n    });\r\n}\r\n\r\nctrl.updateUser = function (request, response, next) {\r\n    const { userId } = request.params;\r\n    const { name, password, birthday } = request.body;\r\n    User.update({\r\n        name,\r\n        password,\r\n        birthday: moment(birthday, 'YYYY-MM-DD', true).toDate()\r\n    }, {\r\n            where: {\r\n                id: userId\r\n            }\r\n        }\r\n    ).then(function (recordsCount) {\r\n        if (recordsCount[0] > 0) {\r\n            response.status(204).send();\r\n        } else {\r\n            response.status(404).send('Usuário não encontrado');\r\n        }\r\n    }).catch(function (error) {\r\n        console.error(error);\r\n        next(error);\r\n    })\r\n}\r\n\r\nctrl.deleteUser = function (request, response, next) {\r\n    const { userId } = request.params;\r\n\r\n    sequelize.transaction(async function (transaction) {\r\n        await Task.destroy({\r\n            where: {\r\n                user_id: userId\r\n            },\r\n            transaction\r\n        });\r\n\r\n        const recordsCount = await User.destroy({\r\n            where: {\r\n                id: userId\r\n            },\r\n            transaction\r\n        });\r\n\r\n        testandoLog(recordsCount);\r\n\r\n        if (recordsCount > 0) {\r\n            response.status(204).send();\r\n        } else {\r\n            response.status(404).send('Usuário não encontrado');\r\n            return transaction.rollback();\r\n        }\r\n\r\n    }).catch(function (error) {\r\n        console.error(error);\r\n        next(error);\r\n    })\r\n};\r\n\r\nfunction testandoLog(text) {\r\n    console.log(text)\r\n}\r\n\r\nctrl.login = function (request, response) {\r\n    const { username, password } = request.body;\r\n\r\n    if (username === \"admin\" && password === \"123456\") {\r\n        const loggedUser = {\r\n            name: \"Douglas\",\r\n            username: \"admin\",\r\n            accessType: \"admin\",\r\n        }\r\n        const token = jwt.createToken(loggedUser);\r\n        response.status(200).json({\r\n            token: token\r\n        })\r\n    } else {\r\n        response.status(401).send(\"Usuário ou senha inválidos.\");\r\n    }\r\n};\r\n\r\nctrl.verifyAuth = function (request, response, next) {\r\n    const token = request.headers['x-access-token'] ||\r\n        request.cookies['x-access-token'];\r\n    try {\r\n        const payload = jwt.decodeToken(token);\r\n        if (payload) {\r\n            request.payload = payload;\r\n            next();\r\n            return;\r\n        }\r\n    } catch (ex) {\r\n        console.error(ex);\r\n    }\r\n    response.status(400).send(\"Permissão negada.\");\r\n}\r\n\r\nctrl.returnUser = function (request, response, next) {\r\n    User.findAll({\r\n        attributes: {\r\n            exclude: ['password']\r\n        }\r\n    }).then(function (users) {\r\n        response.status(200).json(users);\r\n    }).catch(function (error) {\r\n        console.error(error);\r\n        next(error);\r\n    })\r\n}\r\n\r\nctrl.countUsers = function (request, response, next) {\r\n    User.findAll({\r\n        attributes: [[sequelize.fn('COUNT', sequelize.col('id')), 'count_users']]\r\n    }).then(function (countUsers) {\r\n        response.status(200).json(countUsers[0]);\r\n    }).catch(function (error) {\r\n        console.error(error);\r\n        next(error);\r\n    })\r\n}"]}